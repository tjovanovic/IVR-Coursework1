function ret = get_binary(image, background)

% Subtract background from the original image
no_background = abs(imsubtract(background, image));
%no_background = normalize(no_background);
if 0
% Gaussian filter to reduce the noise
gaussian_filter = fspecial('gaussian',[20 111], 10);
filtered_image = imfilter(no_background, gaussian_filter, 'same');

% Convert the image from RGB to Gray
grayscale_image = rgb2gray(filtered_image);
grayscale_image = im2double(grayscale_image);

grayscale_image = imadjust(grayscale_image);
% Extract the binary image using Otsu thresholding
threshold = graythresh(grayscale_image);
binary_image = im2bw(grayscale_image, threshold);


binary_image = bwmorph(binary_image, 'erode', 2);
binary_image = bwmorph(binary_image, 'dilate', 4);
end

thresholded_image = no_background > 50;
binary_image = thresholded_image(:,:,1) | thresholded_image(:,:,2) | thresholded_image(:,:,3);

se = strel('disk', 6);
filledMatrix = imclose(fullBinMatrix, se);

% Return labeled image with the connected regions
ret = bwlabel(binary_image,8);